aws_region = "eu-central-1"

vpc = [
  {
    cidr_block = "10.0.0.0/26"
    tags = {
      "Name" = "project-a-dev-vpc"
    }
  }
]

subnet = [
  {
    vpc                     = "project-a-dev-vpc"
    availability_zone       = "eu-central-1a"
    newbits                 = 2
    netnum                  = 0
    map_public_ip_on_launch = true
    tags = {
      "Name" = "project-a-dev-public-1a-1"
    }
  },
  {
    vpc                     = "project-a-dev-vpc"
    availability_zone       = "eu-central-1b"
    newbits                 = 2
    netnum                  = 1
    map_public_ip_on_launch = true
    tags = {
      "Name" = "project-a-dev-public-1b-1"
    }
  },
  {
    vpc                     = "project-a-dev-vpc"
    availability_zone       = "eu-central-1a"
    newbits                 = 2
    netnum                  = 2
    map_public_ip_on_launch = false
    tags = {
      "Name" = "project-a-dev-private-1a-1"
    }
  },
  {
    vpc                     = "project-a-dev-vpc"
    availability_zone       = "eu-central-1b"
    newbits                 = 2
    netnum                  = 3
    map_public_ip_on_launch = false
    tags = {
      "Name" = "project-a-dev-private-1b-1"
    }
  }
]

# internet_gateway
ig = [
  {
    vpc = "project-a-dev-vpc"
    tags = {
      "Name" = "project-a-dev-igw"
    }
  }
]

# elastic_ip
eip = [
  {
    domain = "vpc"
    tags = {
      "Name" = "project-a-dev-eip-ngw"
    }
  }
]

# ngw = [
#   {
#     allocation_id = "eipalloc-04fc5898f33c84fc0"
#     subnet_id     = "subnet-094706d5e8dc4927b"
#     tags = {
#       "Name" = "project-a-dev-ngw"
#     }
#   }
# ]

# nat_gateway
ngw = [
  {
    eip    = "project-a-dev-eip-ngw"
    subnet = "project-a-dev-public-1b-1"
    tags = {
      "Name" = "project-a-dev-ngw"
    }
  }
]

# rtd = [
#   {
#     vpc_id = "project-a-dev-vpc"
#     route = [
#       {
#         cidr_block = "10.0.0.0/26"
#         gateway_id = "local"
#       },
#       {
#         cidr_block = "0.0.0.0/0"
#         gateway_id = "nat-09b27e37c4ed87cf0"
#       }
#     ]
#     tags = {
#       "Name" = "project-a-dev-private-rt"
#     }
#   },
#   {
#     vpc_id = "project-a-dev-vpc"
#     route = [
#       {
#         cidr_block = "10.0.0.0/26"
#         gateway_id = "local"
#       },
#       {
#         cidr_block = "0.0.0.0/0"
#         gateway_id = "igw-02f3f2b5ef35c977f"
#       }
#     ]
#     tags = {
#       "Name" = "project-a-dev-public-rt"
#     }
#   }
# ]

# route_table
rt = [
  {
    vpc = "project-a-dev-vpc"
    tags = {
      "Name" = "project-a-dev-private-rt"
    }
  },
  {
    vpc = "project-a-dev-vpc"
    tags = {
      "Name" = "project-a-dev-public-rt"
    }
  }
]

# route_table_local_route
rt_l_r = [
  {
    rt                     = "project-a-dev-private-rt"
    destination_cidr_block = "10.0.0.0/26"
  },
  {
    rt                     = "project-a-dev-public-rt"
    destination_cidr_block = "10.0.0.0/26"
  }
]

# route_table_ngw_route
rt_ngw_r = [
  {
    rt                     = "project-a-dev-private-rt"
    destination_cidr_block = "0.0.0.0/0"
    #destination_type       = "aws_nat_gateway"
    destination_name = "project-a-dev-ngw"
  }
]

# route_table_igw_route
rt_igw_r = [
  {
    rt                     = "project-a-dev-public-rt"
    destination_cidr_block = "0.0.0.0/0"
    #destination_type       = "aws_internet_gateway"
    destination_name = "project-a-dev-igw"
  }
]

# #route_table_association without data source
# rta = [
#   {
#     subnet_id      = "subnet-083dd338d5009d1b1"
#     route_table_id = "rtb-06c408873b92f6e7b"
#   },
#   {
#     subnet_id      = "subnet-0e624b33e24959d5d"
#     route_table_id = "rtb-06c408873b92f6e7b"
#   },
#   {
#     subnet_id      = "subnet-094706d5e8dc4927b"
#     route_table_id = "rtb-04e1b2a25e3cb7904"
#   },
#   {
#     subnet_id      = "subnet-071770daad2bbb235"
#     route_table_id = "rtb-04e1b2a25e3cb7904"
#   }
# ]

#route_table_association
rta = [
  {
    subnet      = "project-a-dev-private-1a-1"
    route_table = "project-a-dev-private-rt"
  },
  {
    subnet      = "project-a-dev-private-1b-1"
    route_table = "project-a-dev-private-rt"
  },
  {
    subnet      = "project-a-dev-public-1a-1"
    route_table = "project-a-dev-public-rt"
  },
  {
    subnet      = "project-a-dev-public-1b-1"
    route_table = "project-a-dev-public-rt"
  }
]

#security_group
sg = [
  {
    name        = "project-a-dev-instance-sg"
    description = "SG for private subnets"
    vpc         = "project-a-dev-vpc"
    #vpc_id         = "xxxx"
    tags = {
      "Name" = "project-a-dev-instance-sg"
    }
  },
  {
    name        = "project-a-dev-elb-sg"
    description = "SG for public subnets"
    vpc         = "project-a-dev-vpc"
    #vpc_id         = "xxxx"
    tags = {
      "Name" = "project-a-dev-elb-sg"
    }
  }
]

# #security_group_rule
# sgr = [
#   {
#     description    = "Allow all inbound traffic - private subnet"
#     type           = "ingress"
#     from_port      = 443
#     to_port        = 443
#     protocol       = "-1"
#     cidr_block     = ["10.0.0.0/26"]
#     security_group = "project-a-dev-instance-sg"
#     #security_group_id = "sg-0d8d76cf3b292337e"
#   },
#   {
#     description    = "Allow all outbound traffic - private subnet"
#     type           = "egress"
#     from_port      = 443
#     to_port        = 443
#     protocol       = "-1"
#     cidr_block     = ["10.0.0.0/26"]
#     security_group = "project-a-dev-instance-sg"
#     #security_group_id = "sg-0d8d76cf3b292337e"
#   },
#   {
#     description    = "Allow all inbound traffic - public subnet"
#     type           = "ingress"
#     from_port      = 443
#     to_port        = 443
#     protocol       = "-1"
#     cidr_block     = ["10.0.0.0/26"]
#     security_group = "project-a-dev-elb-sg"
#     #security_group_id = "sg-02ed52317f3e8656f"
#   },
#   {
#     description    = "Allow all outbound traffic - public subnet"
#     type           = "egress"
#     from_port      = 443
#     to_port        = 443
#     protocol       = "-1"
#     cidr_block     = ["10.0.0.0/26"]
#     security_group = "project-a-dev-elb-sg"
#     #security_group_id = "sg-02ed52317f3e8656f"
#   }
# ]

#security_group_egress_rule
sger = [
  {
    description    = "Allow all outbound HTTPS traffic - private subnet"
    security_group = "project-a-dev-instance-sg"
    #security_group_id = "sg-02ed52317f3e8656f"
    cidr_ipv4   = "0.0.0.0/0"
    from_port   = 443
    ip_protocol = "tcp"
    to_port     = 443
  },
  {
    description    = "Allow all outbound HTTPS traffic - public subnet"
    security_group = "project-a-dev-elb-sg"
    #security_group_id = "sg-02ed52317f3e8656f"
    cidr_ipv4   = "0.0.0.0/0"
    from_port   = 443
    ip_protocol = "tcp"
    to_port     = 443
  },
  {
    description    = "Allow all outbound HTTP traffic - private subnet"
    security_group = "project-a-dev-instance-sg"
    #security_group_id = "sg-02ed52317f3e8656f"
    cidr_ipv4   = "0.0.0.0/0"
    from_port   = 80
    ip_protocol = "tcp"
    to_port     = 80
  },
  {
    description    = "Allow all outbound HTTP traffic - public subnet"
    security_group = "project-a-dev-elb-sg"
    #security_group_id = "sg-02ed52317f3e8656f"
    cidr_ipv4   = "0.0.0.0/0"
    from_port   = 80
    ip_protocol = "tcp"
    to_port     = 80
  }
]

#security_group_ingress_rule
sgir = [
  {
    description    = "Allow all inbound HTTPS traffic - private subnet"
    security_group = "project-a-dev-instance-sg"
    #security_group_id = "sg-02ed52317f3e8656f"
    cidr_ipv4   = "0.0.0.0/0"
    from_port   = 443
    ip_protocol = "tcp"
    to_port     = 443
  },
  {
    description    = "Allow all inbound HTTPS traffic - public subnet"
    security_group = "project-a-dev-elb-sg"
    #security_group_id = "sg-02ed52317f3e8656f"
    cidr_ipv4   = "0.0.0.0/0"
    from_port   = 443
    ip_protocol = "tcp"
    to_port     = 443
  },
  {
    description    = "Allow all inbound HTTP traffic - private subnet"
    security_group = "project-a-dev-instance-sg"
    #security_group_id = "sg-02ed52317f3e8656f"
    cidr_ipv4   = "0.0.0.0/0"
    from_port   = 80
    ip_protocol = "tcp"
    to_port     = 80
  },
  {
    description    = "Allow all inbound HTTP traffic - public subnet"
    security_group = "project-a-dev-elb-sg"
    #security_group_id = "sg-02ed52317f3e8656f"
    cidr_ipv4   = "0.0.0.0/0"
    from_port   = 80
    ip_protocol = "tcp"
    to_port     = 80
  }
]

iam_role = [
  {
    name = "EC2AccessToSSM"
    tags = {
      "Name" = "EC2AccessToSSM"
    }
  }
]

# iam_rpa = [
#   {
#     role = "EC2AccessToSSM"
#     policy_arn = [
#       "arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore",
#       "arn:aws:iam::aws:policy/AmazonSSMPatchAssociation"]
#   }
# ]

# iam_role_policy_attachment
iam_rpa = {
  role = "EC2AccessToSSM"
  policy_arn = [
    "arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore",
  "arn:aws:iam::aws:policy/AmazonSSMPatchAssociation"]
}

# iam_instance_profile
iam_i_p = [
  {
    name = "EC2AccessToSSM-Profile"
    role = "EC2AccessToSSM"
  }
]

launch_template = [
  {
    name               = "AML2023_t2.micro_SMM_Apache"
    image_id           = "ami-08188dffd130a1ac2"
    instance_type      = "t2.micro"
    vpc_security_group = ["project-a-dev-instance-sg", "project-a-dev-elb-sg"]
    #vpc_security_group_ids = ["sg-07138d8580d9e7723"]
    iam_instance_profile = "EC2AccessToSSM-Profile"
    user_data            = "install_apache_and_stress.sh"
    tag_specifications = [
      {
        resource_type = "instance"
        tags = {
          "Name" = "AML2023_t2.micro_SMM_Apache"
        }
      }
    ]
  }
]

# loadbalancer_target_group
lb_tg = [
  {
    name     = "project-a-dev-alb-tg"
    port     = 80
    protocol = "HTTP"
    vpc      = "project-a-dev-vpc"
    #vpc_id   = "vpc-0bcd25237548c25d7"
    tags = {
      "Name" = "Target group for ALB"
    }
  }
]

# autoscaling_group
asg = [
  {
    name = "Apache_ASG"
    subnets = [
      "project-a-dev-private-1a-1",
      "project-a-dev-private-1b-1"
    ]
    desired_capacity   = 2
    max_size           = 4
    min_size           = 2
    target_group_names = ["project-a-dev-alb-tg"]
    # target_group_arns = ["arn:aws:elasticloadbalancing:eu-central-1:637423575860:targetgroup/project-a-dev-alb-tg/f17dae90804b0aec"]
    launch_template_name = "AML2023_t2.micro_SMM_Apache"
    # launch_template_id = "lt-04f95c0d2df8d0b5d"
    tag = [{
      key                 = "Name"
      propagate_at_launch = true
      value               = "project-a-dev-apache"
    }]


    # vpc_zone_identifier = [
    #   "subnet-083dd338d5009d1b1",
    #   "subnet-0e624b33e24959d5d"
    # ]
  }
]

# autoscaling_policy
asgplc = [
  {
    name                   = "TargetTrackingScaling-policy"
    policy_type            = "TargetTrackingScaling"
    adjustment_type        = "ChangeInCapacity"
    autoscaling_group_name = "Apache_ASG"
    predefined_metric_type = "ASGAverageCPUUtilization"
    target_value           = 50.0
  }
]

# loadbalancer
lb = [
  {
    name                 = "project-a-dev-elb"
    internal             = false
    load_balancer_type   = "application"
    security_group_names = ["project-a-dev-elb-sg"]
    # security_groups    = ["project-a-dev-elb-sg"]
    subnet_names = [
      "project-a-dev-public-1a-1",
      "project-a-dev-public-1b-1"
    ]
    # subnets = [
    #   "project-a-dev-public-1a-1",
    #   "project-a-dev-public-1b-1"
    # ]
    # access_logs = object({
    #   s3_bucket              = string
    #   s3_prefix              = string
    #   s3_access_logs_enabled = bool
    # })
    tags = {
      "Name" = "project-a-dev-elb"
    }
  }
]

# loadbalancer listener
lb_listener = [
  {
    load_balancer_name = "project-a-dev-elb"
    # load_balancer_arn = "arn:aws:elasticloadbalancing:eu-central-1:637423575860:loadbalancer/app/project-a-dev-elb/015e517171ef7bf2"
    port              = 80
    protocol          = "HTTP"
    action_type       = "forward"
    target_group_name = "project-a-dev-alb-tg"
    # target_group_arn  = "arn:aws:elasticloadbalancing:eu-central-1:637423575860:targetgroup/project-a-dev-alb-tg/f17dae90804b0aec"
    tags = {
      "Name" = "project-a-dev-elb-listener"
    }
  }
]